
<IfModule mod_rewrite.c>
  RewriteEngine On

  # Redirect HTTP to HTTPS (Recommended)
  RewriteCond %{HTTPS} off
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

   # âœ… NEW: Allow robots.txt and sitemap.xml before any rewrites
  RewriteRule ^(robots\.txt|sitemap\.xml)$ - [L]  # <-- added
  
  # Serve index.html for the root directory request
  RewriteRule ^$ index.html [L]

  # Remove .html extension from URLs if typed explicitly by the user (for cleaner URLs)
  RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /([^/]+/)*[^.]+\.html(\?[^\ ]*)?\ HTTP/
  RewriteRule ^(([^/]+/)*[^.]+)\.html$ /$1 [R=301,L]

  # Main routing logic for Next.js static export:
  # If the request is not for an existing file
  RewriteCond %{REQUEST_FILENAME} !-f
  # And the request is not for an existing directory
  RewriteCond %{REQUEST_FILENAME} !-d
  # And if a .html file with the same name as the request (e.g., /about -> /about.html) exists, serve it
  # This handles direct access to routes like yourdomain.com/about
  RewriteCond %{DOCUMENT_ROOT}/$1.html -f
  RewriteRule ^(.+)$ $1.html [L]

  # Fallback for 404 errors:
  # If, after the above rules, the request still doesn't match an existing file or directory,
  # serve the custom not-found.html page generated by Next.js.
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /not-found.html [L]
</IfModule>

# Define the custom 404 error document
# This ensures Apache serves your Next.js generated not-found.html for any 404 errors it handles.
ErrorDocument 404 /not-found.html
